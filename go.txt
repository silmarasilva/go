go run primeiro.go --> rodar o código

PACOTES 

modulo = conjunto de pacotes que compoe o seu projeto. 
Compilacao do código em um lugar só.
go mod init modulo 
---> cria o go.mod arquivo que centraliza todas as dependencias do projeto.
Apos criar o modulo, basta rodar o comando go build para rodar o código e não mais go run <file.go>

go build --> cria um binário com o código compilado.
Pega tudo que está na pasta ou acima dela e compila num arquivo só.
Você também pode rodar o código usando ./modulo

se Você quiser criar mais de um pacote, vc precisa criar mais de uma pasta.

maiúscula e minúscula

Se uma funcão comeca com letra minúscula ela só vai ser visível dentro do pacote que ela está.
Se uma funcão comeca com letra maiúscula então ela poderá ser exportada por outros pacotes.
Funcoes exportadas precisam ter um comentário acima delas.

O módulo não se atualiza automaticamente. 
para atualizar, ./modulo

go install --> faz a mesma coisa que o go build porém salva o arquivo na raiz onde vc instalou o go.


PACOTES EXTERNOS

Na raiz da pasta do módulo go get <url-package>
ex.: go get github.com/badoux/checkmail
Verificar que o pacote foi add no go.mod
Não alterar o go.mod manualmente.


O nome utilizado para chamar o módulo é sempre o nome depois da última barra.
ex.: modulo/axuliar ---> auxiliar.Escrever

go mod tidy --> remove todas as dependencias que nao estão sendo usadas.
